2024-11-21 19:52:31 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 19:52:31 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 22972 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 19:52:31 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 19:52:31 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 19:52:33 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:52:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 19:52:33 - Finished Spring Data repository scanning in 284 ms. Found 8 JPA repository interfaces.
2024-11-21 19:52:33 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:52:33 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:52:33 - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2024-11-21 19:52:33 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:52:33 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:52:33 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-21 19:52:34 - Tomcat initialized with port 8080 (http)
2024-11-21 19:52:34 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 19:52:34 - Starting service [Tomcat]
2024-11-21 19:52:34 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 19:52:35 - Initializing Spring embedded WebApplicationContext
2024-11-21 19:52:35 - Root WebApplicationContext: initialization completed in 3632 ms
2024-11-21 19:52:35 - HikariPool-1 - Starting...
2024-11-21 19:52:35 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14b26e90
2024-11-21 19:52:35 - HikariPool-1 - Start completed.
2024-11-21 19:52:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 19:52:35 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 19:52:36 - HHH000026: Second-level cache disabled
2024-11-21 19:52:36 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 19:52:37 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 19:52:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 19:52:38 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
2024-11-21 19:52:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 19:52:38 - HikariPool-1 - Shutdown initiated...
2024-11-21 19:52:38 - HikariPool-1 - Shutdown completed.
2024-11-21 19:52:38 - Stopping service [Tomcat]
2024-11-21 19:52:38 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-21 19:52:38 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'date' found for type 'Show'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-21 19:56:04 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 19:56:04 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 27624 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 19:56:04 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 19:56:04 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 19:56:06 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:56:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 19:56:06 - Finished Spring Data repository scanning in 319 ms. Found 8 JPA repository interfaces.
2024-11-21 19:56:07 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:56:07 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:56:07 - Finished Spring Data repository scanning in 15 ms. Found 0 MongoDB repository interfaces.
2024-11-21 19:56:07 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:56:07 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:56:07 - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-11-21 19:56:08 - Tomcat initialized with port 8080 (http)
2024-11-21 19:56:08 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 19:56:08 - Starting service [Tomcat]
2024-11-21 19:56:08 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 19:56:08 - Initializing Spring embedded WebApplicationContext
2024-11-21 19:56:08 - Root WebApplicationContext: initialization completed in 4362 ms
2024-11-21 19:56:09 - HikariPool-1 - Starting...
2024-11-21 19:56:09 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c154508
2024-11-21 19:56:09 - HikariPool-1 - Start completed.
2024-11-21 19:56:09 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 19:56:09 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 19:56:09 - HHH000026: Second-level cache disabled
2024-11-21 19:56:10 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 19:56:11 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 19:56:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 19:56:12 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
2024-11-21 19:56:12 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 19:56:12 - HikariPool-1 - Shutdown initiated...
2024-11-21 19:56:12 - HikariPool-1 - Shutdown completed.
2024-11-21 19:56:12 - Stopping service [Tomcat]
2024-11-21 19:56:12 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-21 19:56:12 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'date' found for type 'Show'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-21 19:58:46 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 19:58:46 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 26320 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 19:58:46 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 19:58:46 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 19:58:48 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:58:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 19:58:48 - Finished Spring Data repository scanning in 241 ms. Found 8 JPA repository interfaces.
2024-11-21 19:58:48 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:58:48 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 19:58:48 - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
2024-11-21 19:58:48 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 19:58:48 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 19:58:48 - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-11-21 19:58:49 - Tomcat initialized with port 8080 (http)
2024-11-21 19:58:49 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 19:58:49 - Starting service [Tomcat]
2024-11-21 19:58:49 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 19:58:50 - Initializing Spring embedded WebApplicationContext
2024-11-21 19:58:50 - Root WebApplicationContext: initialization completed in 3626 ms
2024-11-21 19:58:50 - HikariPool-1 - Starting...
2024-11-21 19:58:50 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36cf16a6
2024-11-21 19:58:50 - HikariPool-1 - Start completed.
2024-11-21 19:58:50 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 19:58:50 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 19:58:50 - HHH000026: Second-level cache disabled
2024-11-21 19:58:51 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 19:58:52 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 19:58:52 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 19:58:53 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 19:58:53 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 19:58:53 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 19:58:53 - Adding welcome page: class path resource [static/index.html]
2024-11-21 19:58:55 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@75a955bf], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2d4df467, com.mongodb.Jep395RecordCodecProvider@65c2610f, com.mongodb.KotlinCodecProvider@73e4ecb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1540b926], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 19:58:55 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54125400}
2024-11-21 19:58:55 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 19:58:56 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 19:58:57 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 19:58:57 - Kafka version: 3.7.1
2024-11-21 19:58:57 - Kafka commitId: e2494e6ffb89f828
2024-11-21 19:58:57 - Kafka startTimeMs: 1732199337190
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:58:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:58:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:58:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 19:59:27 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 19:59:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 19:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 19:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 19:59:37 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 19:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 19:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 19:59:37 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 19:59:37 - Metrics scheduler closed
2024-11-21 19:59:37 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 19:59:37 - Metrics reporters closed
2024-11-21 19:59:37 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 19:59:37 - Started MovieticketbookingplatformApplication in 51.753 seconds (process running for 52.6)
2024-11-21 20:01:51 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:01:51 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:01:51 - Completed initialization in 21 ms
2024-11-21 20:10:33 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:10:33 - HikariPool-1 - Shutdown initiated...
2024-11-21 20:10:33 - HikariPool-1 - Shutdown completed.
2024-11-21 20:11:29 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:11:29 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 15052 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:11:29 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:11:29 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:11:31 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:11:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:11:31 - Finished Spring Data repository scanning in 312 ms. Found 8 JPA repository interfaces.
2024-11-21 20:11:31 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:11:31 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:11:31 - Finished Spring Data repository scanning in 15 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:11:31 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:11:31 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:11:31 - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-11-21 20:11:33 - Tomcat initialized with port 8080 (http)
2024-11-21 20:11:33 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:11:33 - Starting service [Tomcat]
2024-11-21 20:11:33 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:11:33 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:11:33 - Root WebApplicationContext: initialization completed in 4402 ms
2024-11-21 20:11:34 - HikariPool-1 - Starting...
2024-11-21 20:11:34 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36cf16a6
2024-11-21 20:11:34 - HikariPool-1 - Start completed.
2024-11-21 20:11:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:11:34 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:11:34 - HHH000026: Second-level cache disabled
2024-11-21 20:11:35 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:11:36 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:11:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:11:38 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:11:38 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 20:11:38 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:11:38 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:11:39 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@605610e5], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5cfcb55c, com.mongodb.Jep395RecordCodecProvider@416dd4d8, com.mongodb.KotlinCodecProvider@2dca3c72]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@60a98fa6], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:11:39 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27352600}
2024-11-21 20:11:40 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:11:41 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:11:41 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:11:42 - Kafka version: 3.7.1
2024-11-21 20:11:42 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:11:42 - Kafka startTimeMs: 1732200102224
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:11:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:11:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:12:12 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:12:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:12:22 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:12:22 - Metrics scheduler closed
2024-11-21 20:12:22 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:12:22 - Metrics reporters closed
2024-11-21 20:12:22 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:12:22 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:12:22 - Started MovieticketbookingplatformApplication in 53.969 seconds (process running for 54.879)
2024-11-21 20:14:43 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:14:43 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:14:43 - Completed initialization in 14 ms
2024-11-21 20:22:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:22:52 - HikariPool-1 - Shutdown initiated...
2024-11-21 20:22:52 - HikariPool-1 - Shutdown completed.
2024-11-21 20:23:02 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:23:03 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 4852 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:23:03 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:23:03 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:23:05 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:23:05 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:23:05 - Finished Spring Data repository scanning in 248 ms. Found 8 JPA repository interfaces.
2024-11-21 20:23:05 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:23:05 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:23:05 - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:23:05 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:23:05 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:23:05 - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-11-21 20:23:06 - Tomcat initialized with port 8080 (http)
2024-11-21 20:23:06 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:23:06 - Starting service [Tomcat]
2024-11-21 20:23:06 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:23:07 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:23:07 - Root WebApplicationContext: initialization completed in 3938 ms
2024-11-21 20:23:07 - HikariPool-1 - Starting...
2024-11-21 20:23:07 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2375a976
2024-11-21 20:23:07 - HikariPool-1 - Start completed.
2024-11-21 20:23:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:23:08 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:23:08 - HHH000026: Second-level cache disabled
2024-11-21 20:23:08 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:23:10 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:23:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:23:11 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:23:11 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 20:23:11 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:23:11 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:23:13 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@23110196], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@a555005, com.mongodb.Jep395RecordCodecProvider@37dcda42, com.mongodb.KotlinCodecProvider@42d039ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@793af433], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:23:13 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30344500}
2024-11-21 20:23:13 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:23:14 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:23:14 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:23:15 - Kafka version: 3.7.1
2024-11-21 20:23:15 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:23:15 - Kafka startTimeMs: 1732200794999
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:23:45 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:23:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:23:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:23:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:23:55 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:23:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:23:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:23:55 - Metrics scheduler closed
2024-11-21 20:23:55 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:23:55 - Metrics reporters closed
2024-11-21 20:23:55 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:23:55 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:23:55 - Started MovieticketbookingplatformApplication in 53.003 seconds (process running for 54.215)
2024-11-21 20:23:55 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:23:55 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:23:55 - Completed initialization in 2 ms
2024-11-21 20:29:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:29:04 - HikariPool-1 - Shutdown initiated...
2024-11-21 20:29:04 - HikariPool-1 - Shutdown completed.
2024-11-21 20:29:14 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:29:14 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 9056 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:29:14 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:29:14 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:29:16 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:29:16 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:29:17 - Finished Spring Data repository scanning in 295 ms. Found 8 JPA repository interfaces.
2024-11-21 20:29:17 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:29:17 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:29:17 - Finished Spring Data repository scanning in 14 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:29:17 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:29:17 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:29:17 - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-11-21 20:29:18 - Tomcat initialized with port 8080 (http)
2024-11-21 20:29:18 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:29:18 - Starting service [Tomcat]
2024-11-21 20:29:18 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:29:18 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:29:18 - Root WebApplicationContext: initialization completed in 3707 ms
2024-11-21 20:29:19 - HikariPool-1 - Starting...
2024-11-21 20:29:19 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c1dd18
2024-11-21 20:29:19 - HikariPool-1 - Start completed.
2024-11-21 20:29:19 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:29:19 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:29:19 - HHH000026: Second-level cache disabled
2024-11-21 20:29:19 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:29:21 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:29:21 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:29:22 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:29:22 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 20:29:22 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:29:22 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:29:24 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@20f1c8ed], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@546ab02b, com.mongodb.Jep395RecordCodecProvider@7bec83d5, com.mongodb.KotlinCodecProvider@4485ca30]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@550482aa], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:29:24 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=35489700}
2024-11-21 20:29:24 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:29:25 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:29:25 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:29:25 - Kafka version: 3.7.1
2024-11-21 20:29:25 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:29:25 - Kafka startTimeMs: 1732201165871
2024-11-21 20:29:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:29:55 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:29:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:29:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:29:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:30:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:30:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:30:05 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:30:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:30:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:30:05 - Metrics scheduler closed
2024-11-21 20:30:05 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:30:05 - Metrics reporters closed
2024-11-21 20:30:05 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:30:05 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:30:05 - Started MovieticketbookingplatformApplication in 51.959 seconds (process running for 52.887)
2024-11-21 20:30:12 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:30:12 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:30:12 - Completed initialization in 9 ms
2024-11-21 20:45:27 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:45:28 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 4788 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:45:28 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:45:28 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:45:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:45:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:45:30 - Finished Spring Data repository scanning in 285 ms. Found 8 JPA repository interfaces.
2024-11-21 20:45:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:45:30 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:45:30 - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:45:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:45:30 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:45:30 - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-11-21 20:45:31 - Tomcat initialized with port 8080 (http)
2024-11-21 20:45:31 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:45:31 - Starting service [Tomcat]
2024-11-21 20:45:31 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:45:32 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:45:32 - Root WebApplicationContext: initialization completed in 3943 ms
2024-11-21 20:45:32 - HikariPool-1 - Starting...
2024-11-21 20:45:32 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5178345d
2024-11-21 20:45:32 - HikariPool-1 - Start completed.
2024-11-21 20:45:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:45:32 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:45:33 - HHH000026: Second-level cache disabled
2024-11-21 20:45:33 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:45:34 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:45:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:45:35 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:45:36 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 20:45:36 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:45:36 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 20:45:36 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:45:37 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@70edffdb], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@73e4ecb, com.mongodb.Jep395RecordCodecProvider@1942a960, com.mongodb.KotlinCodecProvider@5bee88e3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@428943a4], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:45:37 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31635000}
2024-11-21 20:45:38 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:45:38 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 20:45:39 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:45:39 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:45:40 - Kafka version: 3.7.1
2024-11-21 20:45:40 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:45:40 - Kafka startTimeMs: 1732202140133
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:45:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:45:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:46:10 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:46:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:46:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:46:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:46:20 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:46:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:46:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:46:20 - Metrics scheduler closed
2024-11-21 20:46:20 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:46:20 - Metrics reporters closed
2024-11-21 20:46:20 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:46:20 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:46:20 - Started MovieticketbookingplatformApplication in 53.078 seconds (process running for 54.289)
2024-11-21 20:46:29 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:46:29 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:46:29 - Completed initialization in 3 ms
2024-11-21 20:46:29 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:46:29 - Failed to process authentication request
org.springframework.security.authentication.ProviderNotFoundException: No AuthenticationProvider found for org.springframework.security.authentication.UsernamePasswordAuthenticationToken
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:234)
	at org.springframework.security.authentication.ObservationAuthenticationManager.lambda$authenticate$1(ObservationAuthenticationManager.java:54)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.security.authentication.ObservationAuthenticationManager.authenticate(ObservationAuthenticationManager.java:53)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:187)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-11-21 20:46:29 - Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-11-21 20:46:29 - No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@7d0c4b2
2024-11-21 20:46:29 - Securing GET /error?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:46:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 20:46:29 - Saved request http://localhost:8080/error?movieId=1&town=SampleTown&date=2023-10-01&continue to session
2024-11-21 20:46:29 - Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-11-21 20:46:29 - No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@7d0c4b2
2024-11-21 20:52:00 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:52:00 - HikariPool-1 - Shutdown initiated...
2024-11-21 20:52:00 - HikariPool-1 - Shutdown completed.
2024-11-21 20:52:49 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:52:49 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 18912 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:52:49 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:52:49 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:52:51 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:52:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:52:51 - Finished Spring Data repository scanning in 246 ms. Found 8 JPA repository interfaces.
2024-11-21 20:52:51 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:52:51 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:52:51 - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:52:51 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:52:51 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:52:51 - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-11-21 20:52:53 - Tomcat initialized with port 8080 (http)
2024-11-21 20:52:53 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:52:53 - Starting service [Tomcat]
2024-11-21 20:52:53 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:52:53 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:52:53 - Root WebApplicationContext: initialization completed in 3863 ms
2024-11-21 20:52:53 - HikariPool-1 - Starting...
2024-11-21 20:52:54 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c1dd18
2024-11-21 20:52:54 - HikariPool-1 - Start completed.
2024-11-21 20:52:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:52:54 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:52:54 - HHH000026: Second-level cache disabled
2024-11-21 20:52:54 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:52:56 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:52:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:52:57 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:52:57 - User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-11-21 20:52:57 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:52:57 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 20:52:57 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:52:58 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@ca72afb], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@494f74cd, com.mongodb.Jep395RecordCodecProvider@359ae83a, com.mongodb.KotlinCodecProvider@4fddd42b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@52f1f54], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:52:58 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33481400}
2024-11-21 20:52:59 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:52:59 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 20:52:59 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:53:00 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:53:00 - Kafka version: 3.7.1
2024-11-21 20:53:00 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:53:00 - Kafka startTimeMs: 1732202580818
2024-11-21 20:53:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:53:30 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:53:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:53:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:53:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:53:40 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:53:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:53:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:53:40 - Metrics scheduler closed
2024-11-21 20:53:40 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:53:40 - Metrics reporters closed
2024-11-21 20:53:40 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:53:40 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:53:40 - Started MovieticketbookingplatformApplication in 52.274 seconds (process running for 53.185)
2024-11-21 20:53:48 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 20:53:48 - Initializing Servlet 'dispatcherServlet'
2024-11-21 20:53:48 - Completed initialization in 3 ms
2024-11-21 20:53:48 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:53:48 - Encoded password does not look like BCrypt
2024-11-21 20:53:48 - Failed to authenticate since password does not match stored value
2024-11-21 20:53:48 - Failed to process authentication request
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:216)
	at jdk.proxy2/jdk.proxy2.$Proxy184.authenticate(Unknown Source)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.authentication.ObservationAuthenticationManager.lambda$authenticate$1(ObservationAuthenticationManager.java:54)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.security.authentication.ObservationAuthenticationManager.authenticate(ObservationAuthenticationManager.java:53)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:187)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-11-21 20:53:48 - Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-11-21 20:53:48 - No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@4d5097db
2024-11-21 20:53:48 - Securing GET /error?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:53:48 - Secured GET /error?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:53:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 20:54:43 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:54:43 - Encoded password does not look like BCrypt
2024-11-21 20:54:43 - Failed to authenticate since password does not match stored value
2024-11-21 20:54:43 - Failed to process authentication request
org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:216)
	at jdk.proxy2/jdk.proxy2.$Proxy184.authenticate(Unknown Source)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.authentication.ObservationAuthenticationManager.lambda$authenticate$1(ObservationAuthenticationManager.java:54)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.security.authentication.ObservationAuthenticationManager.authenticate(ObservationAuthenticationManager.java:53)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:187)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-11-21 20:54:43 - Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2024-11-21 20:54:43 - No match found. Using default entry point org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint@4d5097db
2024-11-21 20:54:43 - Securing GET /error?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:54:43 - Secured GET /error?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 20:54:43 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 20:57:39 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:57:39 - HikariPool-1 - Shutdown initiated...
2024-11-21 20:57:39 - HikariPool-1 - Shutdown completed.
2024-11-21 20:57:46 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 20:57:46 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 24408 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 20:57:46 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 20:57:46 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 20:57:48 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:57:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 20:57:49 - Finished Spring Data repository scanning in 247 ms. Found 8 JPA repository interfaces.
2024-11-21 20:57:49 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:57:49 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 20:57:49 - Finished Spring Data repository scanning in 14 ms. Found 0 MongoDB repository interfaces.
2024-11-21 20:57:49 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 20:57:49 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 20:57:49 - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-11-21 20:57:50 - Tomcat initialized with port 8080 (http)
2024-11-21 20:57:50 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 20:57:50 - Starting service [Tomcat]
2024-11-21 20:57:50 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 20:57:51 - Initializing Spring embedded WebApplicationContext
2024-11-21 20:57:51 - Root WebApplicationContext: initialization completed in 3990 ms
2024-11-21 20:57:51 - HikariPool-1 - Starting...
2024-11-21 20:57:52 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5eee3da9
2024-11-21 20:57:52 - HikariPool-1 - Start completed.
2024-11-21 20:57:52 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 20:57:52 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 20:57:53 - HHH000026: Second-level cache disabled
2024-11-21 20:57:53 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 20:57:55 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 20:57:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 20:57:57 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 20:57:57 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 20:57:57 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 20:57:58 - Adding welcome page: class path resource [static/index.html]
2024-11-21 20:57:59 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@245155b8], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2b5854a7, com.mongodb.Jep395RecordCodecProvider@4cf5cf47, com.mongodb.KotlinCodecProvider@5621119d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1c7aa676], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 20:57:59 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32067700}
2024-11-21 20:58:00 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 20:58:00 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 20:58:00 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 20:58:01 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 20:58:01 - Kafka version: 3.7.1
2024-11-21 20:58:01 - Kafka commitId: e2494e6ffb89f828
2024-11-21 20:58:01 - Kafka startTimeMs: 1732202881511
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 20:58:31 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 20:58:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 20:58:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 20:58:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 20:58:41 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 20:58:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 20:58:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 20:58:41 - Metrics scheduler closed
2024-11-21 20:58:41 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 20:58:41 - Metrics reporters closed
2024-11-21 20:58:41 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 20:58:41 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 20:58:41 - Started MovieticketbookingplatformApplication in 55.459 seconds (process running for 56.286)
2024-11-21 21:01:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 21:01:40 - Initializing Servlet 'dispatcherServlet'
2024-11-21 21:01:40 - Completed initialization in 3 ms
2024-11-21 21:01:40 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:01:41 - Authenticated user
2024-11-21 21:01:41 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 21:01:41 - Secured GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:01:41 - SQL Error: 0, SQLState: 42P01
2024-11-21 21:01:41 - ERROR: relation "theatre" does not exist
  Position: 55
2024-11-21 21:01:41 - An error occurred: 
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select t1_0.id,t1_0.city,t1_0.location,t1_0.name from theatre t1_0 where t1_0.city=?] [ERROR: relation "theatre" does not exist
  Position: 55] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy172.findByCity(Unknown Source)
	at com.poc.movieticketbookingplatform.service.TheatreService.browseTheatresByMovieTownAndDate(TheatreService.java:56)
	at com.poc.movieticketbookingplatform.controller.TheatreController.browseTheatresByMovieTownAndDate(TheatreController.java:55)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select t1_0.id,t1_0.city,t1_0.location,t1_0.name from theatre t1_0 where t1_0.city=?] [ERROR: relation "theatre" does not exist
  Position: 55] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:91)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:264)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:204)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:139)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:382)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:169)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 134 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "theatre" does not exist
  Position: 55
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:137)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 166 common frames omitted
2024-11-21 21:02:30 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:02:30 - Authenticated user
2024-11-21 21:02:30 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 21:02:30 - Secured GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:02:30 - SQL Error: 0, SQLState: 42P01
2024-11-21 21:02:30 - ERROR: relation "theatre" does not exist
  Position: 55
2024-11-21 21:02:30 - An error occurred: 
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select t1_0.id,t1_0.city,t1_0.location,t1_0.name from theatre t1_0 where t1_0.city=?] [ERROR: relation "theatre" does not exist
  Position: 55] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy172.findByCity(Unknown Source)
	at com.poc.movieticketbookingplatform.service.TheatreService.browseTheatresByMovieTownAndDate(TheatreService.java:56)
	at com.poc.movieticketbookingplatform.controller.TheatreController.browseTheatresByMovieTownAndDate(TheatreController.java:55)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select t1_0.id,t1_0.city,t1_0.location,t1_0.name from theatre t1_0 where t1_0.city=?] [ERROR: relation "theatre" does not exist
  Position: 55] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:91)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:264)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:204)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:139)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:382)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:169)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 134 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "theatre" does not exist
  Position: 55
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:137)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 166 common frames omitted
2024-11-21 21:15:56 - Securing GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:15:56 - Authenticated user
2024-11-21 21:15:56 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 21:15:56 - Secured GET /api/theatres/browse?movieId=1&town=SampleTown&date=2023-10-01
2024-11-21 21:17:10 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 21:17:10 - Authenticated user
2024-11-21 21:17:10 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 21:17:10 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 21:21:05 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 21:21:05 - Authenticated user
2024-11-21 21:21:05 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 21:21:05 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 21:37:43 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m49s32ms27µs900ns).
2024-11-21 22:26:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 22:26:07 - HikariPool-1 - Shutdown initiated...
2024-11-21 22:26:07 - HikariPool-1 - Shutdown completed.
2024-11-21 22:26:17 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 22:26:17 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 31988 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 22:26:17 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 22:26:17 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 22:26:18 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 22:26:18 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 22:26:18 - Finished Spring Data repository scanning in 200 ms. Found 8 JPA repository interfaces.
2024-11-21 22:26:19 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 22:26:19 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 22:26:19 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-21 22:26:19 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 22:26:19 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 22:26:19 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-21 22:26:20 - Tomcat initialized with port 8080 (http)
2024-11-21 22:26:20 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 22:26:20 - Starting service [Tomcat]
2024-11-21 22:26:20 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 22:26:20 - Initializing Spring embedded WebApplicationContext
2024-11-21 22:26:20 - Root WebApplicationContext: initialization completed in 2917 ms
2024-11-21 22:26:20 - HikariPool-1 - Starting...
2024-11-21 22:26:20 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34bf66af
2024-11-21 22:26:20 - HikariPool-1 - Start completed.
2024-11-21 22:26:20 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 22:26:20 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 22:26:21 - HHH000026: Second-level cache disabled
2024-11-21 22:26:21 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 22:26:22 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 22:26:22 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 22:26:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 22:26:23 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 22:26:23 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 22:26:23 - Adding welcome page: class path resource [static/index.html]
2024-11-21 22:26:24 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@12039ae0], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@9af2a00, com.mongodb.Jep395RecordCodecProvider@33684b87, com.mongodb.KotlinCodecProvider@50cdaf32]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7a65e842], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 22:26:24 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25187900}
2024-11-21 22:26:25 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 22:26:25 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 22:26:25 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 22:26:26 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 22:26:26 - Kafka version: 3.7.1
2024-11-21 22:26:26 - Kafka commitId: e2494e6ffb89f828
2024-11-21 22:26:26 - Kafka startTimeMs: 1732208186614
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 22:26:56 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 22:26:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:26:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:26:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 22:27:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 22:27:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 22:27:06 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 22:27:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 22:27:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 22:27:06 - Metrics scheduler closed
2024-11-21 22:27:06 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 22:27:06 - Metrics reporters closed
2024-11-21 22:27:06 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 22:27:06 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 22:27:06 - Started MovieticketbookingplatformApplication in 49.962 seconds (process running for 50.742)
2024-11-21 22:37:43 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 22:37:43 - Initializing Servlet 'dispatcherServlet'
2024-11-21 22:37:43 - Completed initialization in 60 ms
2024-11-21 22:37:43 - Securing GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 22:37:43 - Secured GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 22:37:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 23:00:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:00:11 - HikariPool-1 - Shutdown initiated...
2024-11-21 23:00:11 - HikariPool-1 - Shutdown completed.
2024-11-21 23:07:43 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 23:07:43 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 26708 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 23:07:43 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 23:07:43 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 23:07:44 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:07:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 23:07:44 - Finished Spring Data repository scanning in 199 ms. Found 8 JPA repository interfaces.
2024-11-21 23:07:44 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:07:44 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:07:44 - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2024-11-21 23:07:44 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:07:44 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:07:44 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-21 23:07:45 - Tomcat initialized with port 8080 (http)
2024-11-21 23:07:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 23:07:45 - Starting service [Tomcat]
2024-11-21 23:07:45 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 23:07:45 - Initializing Spring embedded WebApplicationContext
2024-11-21 23:07:45 - Root WebApplicationContext: initialization completed in 2891 ms
2024-11-21 23:07:46 - HikariPool-1 - Starting...
2024-11-21 23:07:46 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f4d05b3
2024-11-21 23:07:46 - HikariPool-1 - Start completed.
2024-11-21 23:07:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 23:07:46 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 23:07:46 - HHH000026: Second-level cache disabled
2024-11-21 23:07:47 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 23:07:48 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 23:07:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:07:48 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); Reason: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
2024-11-21 23:07:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:07:48 - HikariPool-1 - Shutdown initiated...
2024-11-21 23:07:48 - HikariPool-1 - Shutdown completed.
2024-11-21 23:07:48 - Stopping service [Tomcat]
2024-11-21 23:07:48 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-21 23:07:48 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); Reason: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); Reason: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); Reason: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); Reason: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.poc.movieticketbookingplatform.model.Show com.poc.movieticketbookingplatform.repository.ShowRepository.findByCityAndTheatreAndShowTime(java.lang.String,java.lang.String,java.time.LocalDateTime); No property 'city' found for type 'Show'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'city' found for type 'Show'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-21 23:11:44 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 23:11:45 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 29068 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 23:11:45 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 23:11:45 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 23:11:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:11:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 23:11:46 - Finished Spring Data repository scanning in 203 ms. Found 8 JPA repository interfaces.
2024-11-21 23:11:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:11:46 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:11:46 - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2024-11-21 23:11:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:11:46 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:11:46 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-21 23:11:47 - Tomcat initialized with port 8080 (http)
2024-11-21 23:11:47 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 23:11:48 - Starting service [Tomcat]
2024-11-21 23:11:48 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 23:11:48 - Initializing Spring embedded WebApplicationContext
2024-11-21 23:11:48 - Root WebApplicationContext: initialization completed in 3017 ms
2024-11-21 23:11:48 - HikariPool-1 - Starting...
2024-11-21 23:11:48 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d5ef1c3
2024-11-21 23:11:48 - HikariPool-1 - Start completed.
2024-11-21 23:11:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 23:11:49 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 23:11:49 - HHH000026: Second-level cache disabled
2024-11-21 23:11:49 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 23:11:50 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 23:11:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:11:50 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-21 23:11:51 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 23:11:52 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 23:11:52 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 23:11:52 - Adding welcome page: class path resource [static/index.html]
2024-11-21 23:11:53 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@329ab624], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6470078d, com.mongodb.Jep395RecordCodecProvider@5e7cfcb5, com.mongodb.KotlinCodecProvider@72b16e26]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1e64a724], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 23:11:53 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29447300}
2024-11-21 23:11:54 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 23:11:54 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 23:11:54 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 23:11:54 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 23:11:55 - Kafka version: 3.7.1
2024-11-21 23:11:55 - Kafka commitId: e2494e6ffb89f828
2024-11-21 23:11:55 - Kafka startTimeMs: 1732210915036
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:58 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:11:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:11:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 23:12:25 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 23:12:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:12:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:12:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 23:12:35 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 23:12:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 23:12:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 23:12:35 - Metrics scheduler closed
2024-11-21 23:12:35 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 23:12:35 - Metrics reporters closed
2024-11-21 23:12:35 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 23:12:35 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 23:12:35 - Started MovieticketbookingplatformApplication in 50.675 seconds (process running for 51.319)
2024-11-21 23:12:45 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 23:12:45 - Initializing Servlet 'dispatcherServlet'
2024-11-21 23:12:45 - Completed initialization in 2 ms
2024-11-21 23:12:45 - Securing GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:12:45 - Secured GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:12:46 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 23:12:51 - Securing GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:12:51 - Secured GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:12:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 23:21:46 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:21:46 - HikariPool-1 - Shutdown initiated...
2024-11-21 23:21:46 - HikariPool-1 - Shutdown completed.
2024-11-21 23:21:56 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 23:21:56 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 28988 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 23:21:56 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 23:21:56 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 23:21:57 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:21:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 23:21:57 - Finished Spring Data repository scanning in 180 ms. Found 8 JPA repository interfaces.
2024-11-21 23:21:57 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:21:57 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:21:57 - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2024-11-21 23:21:57 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:21:57 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:21:57 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-21 23:21:59 - Tomcat initialized with port 8080 (http)
2024-11-21 23:21:59 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 23:21:59 - Starting service [Tomcat]
2024-11-21 23:21:59 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 23:21:59 - Initializing Spring embedded WebApplicationContext
2024-11-21 23:21:59 - Root WebApplicationContext: initialization completed in 2757 ms
2024-11-21 23:21:59 - HikariPool-1 - Starting...
2024-11-21 23:21:59 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@73234691
2024-11-21 23:21:59 - HikariPool-1 - Start completed.
2024-11-21 23:22:00 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 23:22:00 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 23:22:00 - HHH000026: Second-level cache disabled
2024-11-21 23:22:00 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 23:22:01 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 23:22:01 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:22:02 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-21 23:22:03 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 23:22:03 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 23:22:03 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 23:22:03 - Adding welcome page: class path resource [static/index.html]
2024-11-21 23:22:04 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@76b11572], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7dd5d17a, com.mongodb.Jep395RecordCodecProvider@18a8a42b, com.mongodb.KotlinCodecProvider@4d5dc037]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@2cbd35f2], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 23:22:04 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26342900}
2024-11-21 23:22:05 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 23:22:05 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 23:22:05 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 23:22:06 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 23:22:06 - Kafka version: 3.7.1
2024-11-21 23:22:06 - Kafka commitId: e2494e6ffb89f828
2024-11-21 23:22:06 - Kafka startTimeMs: 1732211526439
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 23:22:36 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 23:22:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:22:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:22:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 23:22:46 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 23:22:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 23:22:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 23:22:46 - Metrics scheduler closed
2024-11-21 23:22:46 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 23:22:46 - Metrics reporters closed
2024-11-21 23:22:46 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 23:22:46 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 23:22:46 - Started MovieticketbookingplatformApplication in 50.744 seconds (process running for 51.367)
2024-11-21 23:22:57 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 23:22:57 - Initializing Servlet 'dispatcherServlet'
2024-11-21 23:22:57 - Completed initialization in 2 ms
2024-11-21 23:22:57 - Securing GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:22:57 - Secured GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:22:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 23:23:00 - Securing GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:23:00 - Secured GET /bookings/applyDiscounts?city=New%20York&theatre=AMC%20Empire%2025&numberOfTickets=3&showTime=2023-10-01T14:00:00
2024-11-21 23:23:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-11-21 23:23:06 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:23:07 - Authenticated user
2024-11-21 23:23:07 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:23:07 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:23:09 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:23:09 - Authenticated user
2024-11-21 23:23:09 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:23:09 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:28:11 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:28:11 - Authenticated user
2024-11-21 23:28:11 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:28:11 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:30:47 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:30:48 - Authenticated user
2024-11-21 23:30:48 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:30:48 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:30:56 - Securing GET /api/theatres/browse?movieId=2&town=New%20York&date=2023-10-01
2024-11-21 23:30:56 - Authenticated user
2024-11-21 23:30:56 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:30:56 - Secured GET /api/theatres/browse?movieId=2&town=New%20York&date=2023-10-01
2024-11-21 23:31:11 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:31:11 - Authenticated user
2024-11-21 23:31:11 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:31:11 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:33:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:33:22 - HikariPool-1 - Shutdown initiated...
2024-11-21 23:33:22 - HikariPool-1 - Shutdown completed.
2024-11-21 23:35:53 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-21 23:35:53 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 18964 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-21 23:35:53 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-21 23:35:53 - No active profile set, falling back to 1 default profile: "default"
2024-11-21 23:35:55 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:35:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-21 23:35:55 - Finished Spring Data repository scanning in 198 ms. Found 8 JPA repository interfaces.
2024-11-21 23:35:55 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:35:55 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-21 23:35:55 - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2024-11-21 23:35:55 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-21 23:35:55 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-21 23:35:55 - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-11-21 23:35:56 - Tomcat initialized with port 8080 (http)
2024-11-21 23:35:57 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-21 23:35:57 - Starting service [Tomcat]
2024-11-21 23:35:57 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-21 23:35:57 - Initializing Spring embedded WebApplicationContext
2024-11-21 23:35:57 - Root WebApplicationContext: initialization completed in 3086 ms
2024-11-21 23:35:57 - HikariPool-1 - Starting...
2024-11-21 23:35:57 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c135f63
2024-11-21 23:35:57 - HikariPool-1 - Start completed.
2024-11-21 23:35:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-21 23:35:57 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-21 23:35:57 - HHH000026: Second-level cache disabled
2024-11-21 23:35:58 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-21 23:35:59 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-21 23:35:59 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-21 23:36:00 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-11-21 23:36:01 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-21 23:36:01 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-21 23:36:01 - No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2024-11-21 23:36:01 - Adding welcome page: class path resource [static/index.html]
2024-11-21 23:36:02 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@6137a032], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d1ddb65, com.mongodb.Jep395RecordCodecProvider@4c963d59, com.mongodb.KotlinCodecProvider@2dfc833b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6becf200], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-21 23:36:02 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24650100}
2024-11-21 23:36:03 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-21 23:36:03 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-11-21 23:36:03 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-21 23:36:04 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-21 23:36:04 - Kafka version: 3.7.1
2024-11-21 23:36:04 - Kafka commitId: e2494e6ffb89f828
2024-11-21 23:36:04 - Kafka startTimeMs: 1732212364738
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-21 23:36:34 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-21 23:36:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:40 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-21 23:36:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-21 23:36:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-21 23:36:44 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-21 23:36:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-21 23:36:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-21 23:36:44 - Metrics scheduler closed
2024-11-21 23:36:44 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-21 23:36:44 - Metrics reporters closed
2024-11-21 23:36:44 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-21 23:36:44 - Tomcat started on port 8080 (http) with context path '/'
2024-11-21 23:36:44 - Started MovieticketbookingplatformApplication in 51.447 seconds (process running for 52.235)
2024-11-21 23:37:20 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-21 23:37:20 - Initializing Servlet 'dispatcherServlet'
2024-11-21 23:37:20 - Completed initialization in 1 ms
2024-11-21 23:37:20 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:37:20 - Authenticated user
2024-11-21 23:37:20 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:37:20 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:38:50 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m52s236ms680µs600ns).
2024-11-21 23:40:00 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:40:00 - Authenticated user
2024-11-21 23:40:00 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:40:00 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:40:45 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s98ms18µs300ns).
2024-11-21 23:41:45 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s927ms198µs500ns).
2024-11-21 23:42:42 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:42:42 - Authenticated user
2024-11-21 23:42:42 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:42:42 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:50:21 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m5s690ms629µs200ns).
2024-11-21 23:54:54 - Securing GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
2024-11-21 23:54:54 - Authenticated user
2024-11-21 23:54:54 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
2024-11-21 23:54:54 - Secured GET /api/theatres/browse?movieId=1&town=New%20York&date=2023-10-01
