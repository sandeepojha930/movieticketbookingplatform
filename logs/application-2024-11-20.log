2024-11-20 00:50:57 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 00:50:57 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 13732 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 00:50:57 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 00:50:57 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 00:50:59 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:50:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 00:50:59 - Finished Spring Data repository scanning in 185 ms. Found 8 JPA repository interfaces.
2024-11-20 00:50:59 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:50:59 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:50:59 - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
2024-11-20 00:50:59 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:50:59 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:50:59 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-20 00:51:00 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-11-20 00:51:00 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 00:51:00 - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.lang.IllegalStateException: Unable to create key store: Could not load store from 'classpath:keystore.p12'
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.createKeyStore(JksSslStoreBundle.java:112)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.lambda$new$0(JksSslStoreBundle.java:75)
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:106)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.getKeyStore(JksSslStoreBundle.java:81)
	at org.springframework.boot.web.server.WebServerSslBundle.createKeyStore(WebServerSslBundle.java:157)
	at org.springframework.boot.web.server.WebServerSslBundle.createStoreBundle(WebServerSslBundle.java:147)
	at org.springframework.boot.web.server.WebServerSslBundle.get(WebServerSslBundle.java:142)
	at org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getSslBundle(AbstractConfigurableWebServerFactory.java:198)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:383)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:359)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:212)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: java.lang.IllegalStateException: Could not load store from 'classpath:keystore.p12'
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.loadKeyStore(JksSslStoreBundle.java:140)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.createKeyStore(JksSslStoreBundle.java:107)
	... 20 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:215)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.loadKeyStore(JksSslStoreBundle.java:135)
	... 21 common frames omitted
2024-11-20 00:52:51 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 00:52:51 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 27844 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 00:52:51 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 00:52:51 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 00:52:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:52:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 00:52:53 - Finished Spring Data repository scanning in 177 ms. Found 8 JPA repository interfaces.
2024-11-20 00:52:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:52:53 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:52:53 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 00:52:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:52:53 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:52:53 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-20 00:52:54 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-11-20 00:52:54 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 00:52:54 - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.lang.IllegalStateException: Unable to create key store: Could not load store from 'classpath:keystore.p12'
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.createKeyStore(JksSslStoreBundle.java:112)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.lambda$new$0(JksSslStoreBundle.java:75)
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:106)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.getKeyStore(JksSslStoreBundle.java:81)
	at org.springframework.boot.web.server.WebServerSslBundle.createKeyStore(WebServerSslBundle.java:157)
	at org.springframework.boot.web.server.WebServerSslBundle.createStoreBundle(WebServerSslBundle.java:147)
	at org.springframework.boot.web.server.WebServerSslBundle.get(WebServerSslBundle.java:142)
	at org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.getSslBundle(AbstractConfigurableWebServerFactory.java:198)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:383)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:359)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:212)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: java.lang.IllegalStateException: Could not load store from 'classpath:keystore.p12'
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.loadKeyStore(JksSslStoreBundle.java:140)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.createKeyStore(JksSslStoreBundle.java:107)
	... 20 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:215)
	at org.springframework.boot.ssl.jks.JksSslStoreBundle.loadKeyStore(JksSslStoreBundle.java:135)
	... 21 common frames omitted
2024-11-20 00:53:32 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 00:53:33 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 31304 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 00:53:33 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 00:53:33 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 00:53:34 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:53:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 00:53:34 - Finished Spring Data repository scanning in 146 ms. Found 8 JPA repository interfaces.
2024-11-20 00:53:34 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:53:34 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:53:34 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 00:53:34 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:53:34 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:53:34 - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-11-20 00:53:35 - Tomcat initialized with port 8080 (http)
2024-11-20 00:53:35 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 00:53:35 - Starting service [Tomcat]
2024-11-20 00:53:35 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 00:53:35 - Initializing Spring embedded WebApplicationContext
2024-11-20 00:53:35 - Root WebApplicationContext: initialization completed in 2548 ms
2024-11-20 00:53:36 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 00:53:36 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 00:53:36 - HHH000026: Second-level cache disabled
2024-11-20 00:53:36 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 00:53:36 - HikariPool-1 - Starting...
2024-11-20 00:53:37 - SQL Error: 0, SQLState: 3D000
2024-11-20 00:53:37 - FATAL: database "moviedb" does not exist
2024-11-20 00:53:37 - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: database "moviedb" does not exist] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:292)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.postgresql.util.PSQLException: FATAL: database "moviedb" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
2024-11-20 00:53:37 - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-11-20 00:53:37 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-11-20 00:53:37 - Stopping service [Tomcat]
2024-11-20 00:53:37 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 00:53:37 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:153)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:364)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 30 common frames omitted
2024-11-20 00:55:13 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 00:55:13 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 1944 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 00:55:13 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 00:55:13 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 00:55:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:55:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 00:55:15 - Finished Spring Data repository scanning in 175 ms. Found 8 JPA repository interfaces.
2024-11-20 00:55:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:55:15 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:55:15 - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
2024-11-20 00:55:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:55:15 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:55:15 - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-11-20 00:55:16 - Tomcat initialized with port 8080 (http)
2024-11-20 00:55:16 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 00:55:16 - Starting service [Tomcat]
2024-11-20 00:55:16 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 00:55:16 - Initializing Spring embedded WebApplicationContext
2024-11-20 00:55:16 - Root WebApplicationContext: initialization completed in 2948 ms
2024-11-20 00:55:17 - HikariPool-1 - Starting...
2024-11-20 00:55:18 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 00:55:18 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 00:55:18 - HHH000026: Second-level cache disabled
2024-11-20 00:55:18 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 00:55:18 - HikariPool-1 - Starting...
2024-11-20 00:55:19 - SQL Error: 0, SQLState: 3D000
2024-11-20 00:55:19 - FATAL: database "moviedb" does not exist
2024-11-20 00:55:19 - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: database "moviedb" does not exist] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:292)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.postgresql.util.PSQLException: FATAL: database "moviedb" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2845)
	at org.postgresql.core.v3.QueryExecutorImpl.<init>(QueryExecutorImpl.java:176)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:323)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
2024-11-20 00:55:19 - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-11-20 00:55:19 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2024-11-20 00:55:19 - Stopping service [Tomcat]
2024-11-20 00:55:19 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 00:55:19 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:221)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:153)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:364)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:124)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:78)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 30 common frames omitted
2024-11-20 00:56:59 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 00:56:59 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 10892 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 00:56:59 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 00:56:59 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 00:57:00 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:57:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 00:57:00 - Finished Spring Data repository scanning in 149 ms. Found 8 JPA repository interfaces.
2024-11-20 00:57:00 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:57:00 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 00:57:00 - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2024-11-20 00:57:00 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 00:57:00 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 00:57:00 - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-11-20 00:57:01 - Tomcat initialized with port 8080 (http)
2024-11-20 00:57:01 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 00:57:01 - Starting service [Tomcat]
2024-11-20 00:57:01 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 00:57:01 - Initializing Spring embedded WebApplicationContext
2024-11-20 00:57:01 - Root WebApplicationContext: initialization completed in 2424 ms
2024-11-20 00:57:02 - HikariPool-1 - Starting...
2024-11-20 00:57:02 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@160546b1
2024-11-20 00:57:02 - HikariPool-1 - Start completed.
2024-11-20 00:57:02 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 00:57:02 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 00:57:02 - HHH000026: Second-level cache disabled
2024-11-20 00:57:02 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 00:57:03 - Failed to initialize JPA EntityManagerFactory: Entity 'com.poc.movieticketbookingplatform.model.Payment' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
2024-11-20 00:57:03 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.poc.movieticketbookingplatform.model.Payment' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
2024-11-20 00:57:03 - HikariPool-1 - Shutdown initiated...
2024-11-20 00:57:03 - HikariPool-1 - Shutdown completed.
2024-11-20 00:57:03 - Stopping service [Tomcat]
2024-11-20 00:57:03 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 00:57:03 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.poc.movieticketbookingplatform.model.Payment' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.AnnotationException: Entity 'com.poc.movieticketbookingplatform.model.Payment' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:407)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:248)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:399)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:259)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:281)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:324)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
2024-11-20 01:00:03 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:00:03 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 18696 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:00:03 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:00:03 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:00:04 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:00:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:00:04 - Finished Spring Data repository scanning in 143 ms. Found 8 JPA repository interfaces.
2024-11-20 01:00:04 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:00:04 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:00:04 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:00:04 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:00:04 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:00:04 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 01:00:05 - Tomcat initialized with port 8080 (http)
2024-11-20 01:00:05 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:00:05 - Starting service [Tomcat]
2024-11-20 01:00:05 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:00:05 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:00:05 - Root WebApplicationContext: initialization completed in 2580 ms
2024-11-20 01:00:06 - HikariPool-1 - Starting...
2024-11-20 01:00:06 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@37364634
2024-11-20 01:00:06 - HikariPool-1 - Start completed.
2024-11-20 01:00:06 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:00:06 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:00:06 - HHH000026: Second-level cache disabled
2024-11-20 01:00:06 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:00:07 - Failed to initialize JPA EntityManagerFactory: Table [show] contains physical column name [show_time] referred to by multiple logical column names: [show_time], [showTime]
2024-11-20 01:00:07 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Table [show] contains physical column name [show_time] referred to by multiple logical column names: [show_time], [showTime]
2024-11-20 01:00:07 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:00:07 - HikariPool-1 - Shutdown completed.
2024-11-20 01:00:07 - Stopping service [Tomcat]
2024-11-20 01:00:07 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:00:07 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Table [show] contains physical column name [show_time] referred to by multiple logical column names: [show_time], [showTime]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.DuplicateMappingException: Table [show] contains physical column name [show_time] referred to by multiple logical column names: [show_time], [showTime]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl$TableColumnNameBinding.bindPhysicalToLogical(InFlightMetadataCollectorImpl.java:1112)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl$TableColumnNameBinding.addBinding(InFlightMetadataCollectorImpl.java:1081)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addColumnNameBinding(InFlightMetadataCollectorImpl.java:1151)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addColumnNameBinding(InFlightMetadataCollectorImpl.java:1132)
	at org.hibernate.boot.model.internal.AnnotatedColumn.addColumnBinding(AnnotatedColumn.java:479)
	at org.hibernate.boot.model.internal.AnnotatedColumn.linkWithValue(AnnotatedColumn.java:445)
	at org.hibernate.boot.model.internal.BasicValueBinder.linkWithValue(BasicValueBinder.java:1291)
	at org.hibernate.boot.model.internal.BasicValueBinder.make(BasicValueBinder.java:1253)
	at org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(PropertyBinder.java:269)
	at org.hibernate.boot.model.internal.PropertyBinder.makePropertyValueAndBind(PropertyBinder.java:300)
	at org.hibernate.boot.model.internal.PropertyBinder.createBasicBinder(PropertyBinder.java:1194)
	at org.hibernate.boot.model.internal.PropertyBinder.bindBasic(PropertyBinder.java:1087)
	at org.hibernate.boot.model.internal.PropertyBinder.bindProperty(PropertyBinder.java:903)
	at org.hibernate.boot.model.internal.PropertyBinder.buildProperty(PropertyBinder.java:801)
	at org.hibernate.boot.model.internal.PropertyBinder.processElementAnnotations(PropertyBinder.java:722)
	at org.hibernate.boot.model.internal.EntityBinder.processIdPropertiesIfNotAlready(EntityBinder.java:1088)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:416)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:248)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:399)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:259)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:281)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:324)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
2024-11-20 01:02:47 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:02:47 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 24596 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:02:47 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:02:47 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:02:49 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:02:49 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:02:49 - Finished Spring Data repository scanning in 152 ms. Found 8 JPA repository interfaces.
2024-11-20 01:02:49 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:02:49 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:02:49 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:02:49 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:02:49 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:02:49 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 01:02:50 - Tomcat initialized with port 8080 (http)
2024-11-20 01:02:50 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:02:50 - Starting service [Tomcat]
2024-11-20 01:02:50 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:02:50 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:02:50 - Root WebApplicationContext: initialization completed in 2537 ms
2024-11-20 01:02:50 - HikariPool-1 - Starting...
2024-11-20 01:02:51 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@160546b1
2024-11-20 01:02:51 - HikariPool-1 - Start completed.
2024-11-20 01:02:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:02:51 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:02:51 - HHH000026: Second-level cache disabled
2024-11-20 01:02:51 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:02:51 - Failed to initialize JPA EntityManagerFactory: Collection 'com.poc.movieticketbookingplatform.model.Booking.seats' is 'mappedBy' a property named 'booking' which does not exist in the target entity 'com.poc.movieticketbookingplatform.model.Seat'
2024-11-20 01:02:51 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.poc.movieticketbookingplatform.model.Booking.seats' is 'mappedBy' a property named 'booking' which does not exist in the target entity 'com.poc.movieticketbookingplatform.model.Seat'
2024-11-20 01:02:51 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:02:51 - HikariPool-1 - Shutdown completed.
2024-11-20 01:02:51 - Stopping service [Tomcat]
2024-11-20 01:02:51 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:02:51 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.poc.movieticketbookingplatform.model.Booking.seats' is 'mappedBy' a property named 'booking' which does not exist in the target entity 'com.poc.movieticketbookingplatform.model.Seat'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.AnnotationException: Collection 'com.poc.movieticketbookingplatform.model.Booking.seats' is 'mappedBy' a property named 'booking' which does not exist in the target entity 'com.poc.movieticketbookingplatform.model.Seat'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1639)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1653)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1614)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1605)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1811)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1770)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:334)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
2024-11-20 01:06:27 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:06:27 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 1096 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:06:27 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:06:27 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:06:28 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:06:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:06:28 - Finished Spring Data repository scanning in 138 ms. Found 8 JPA repository interfaces.
2024-11-20 01:06:28 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:06:28 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:06:28 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:06:28 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:06:28 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:06:28 - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-11-20 01:06:29 - Tomcat initialized with port 8080 (http)
2024-11-20 01:06:29 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:06:29 - Starting service [Tomcat]
2024-11-20 01:06:29 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:06:30 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:06:30 - Root WebApplicationContext: initialization completed in 2491 ms
2024-11-20 01:06:30 - HikariPool-1 - Starting...
2024-11-20 01:06:30 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14b26e90
2024-11-20 01:06:30 - HikariPool-1 - Start completed.
2024-11-20 01:06:30 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:06:30 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:06:30 - HHH000026: Second-level cache disabled
2024-11-20 01:06:31 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:06:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 01:06:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:06:32 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'requestRepository': Error creating bean with name 'requestRepository' defined in com.poc.movieticketbookingplatform.repository.RequestRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.poc.movieticketbookingplatform.model.BookingResponse
2024-11-20 01:06:32 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:06:32 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:06:32 - HikariPool-1 - Shutdown completed.
2024-11-20 01:06:32 - Stopping service [Tomcat]
2024-11-20 01:06:32 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:06:32 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'requestRepository': Error creating bean with name 'requestRepository' defined in com.poc.movieticketbookingplatform.repository.RequestRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.poc.movieticketbookingplatform.model.BookingResponse
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'requestRepository': Error creating bean with name 'requestRepository' defined in com.poc.movieticketbookingplatform.repository.RequestRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.poc.movieticketbookingplatform.model.BookingResponse
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestRepository' defined in com.poc.movieticketbookingplatform.repository.RequestRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.poc.movieticketbookingplatform.model.BookingResponse
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.poc.movieticketbookingplatform.model.BookingResponse
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:194)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:469)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:99)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:249)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:214)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:197)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:1)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
2024-11-20 01:25:28 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:25:28 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 3524 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:25:28 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:25:28 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:25:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:25:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:25:30 - Finished Spring Data repository scanning in 195 ms. Found 8 JPA repository interfaces.
2024-11-20 01:25:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:25:30 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:25:30 - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:25:30 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:25:30 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:25:30 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 01:25:31 - Tomcat initialized with port 8080 (http)
2024-11-20 01:25:31 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:25:31 - Starting service [Tomcat]
2024-11-20 01:25:31 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:25:31 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:25:31 - Root WebApplicationContext: initialization completed in 2916 ms
2024-11-20 01:25:32 - HikariPool-1 - Starting...
2024-11-20 01:25:32 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a6dbb7c
2024-11-20 01:25:32 - HikariPool-1 - Start completed.
2024-11-20 01:25:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:25:32 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:25:32 - HHH000026: Second-level cache disabled
2024-11-20 01:25:32 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:25:33 - Failed to initialize JPA EntityManagerFactory: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
2024-11-20 01:25:33 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
2024-11-20 01:25:33 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:25:33 - HikariPool-1 - Shutdown completed.
2024-11-20 01:25:33 - Stopping service [Tomcat]
2024-11-20 01:25:33 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:25:33 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.type.descriptor.java.spi.JdbcTypeRecommendationException: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
	at org.hibernate.type.descriptor.java.spi.UnknownBasicJavaType.getRecommendedJdbcType(UnknownBasicJavaType.java:50)
	at org.hibernate.boot.model.process.internal.InferredBasicValueResolver.from(InferredBasicValueResolver.java:195)
	at org.hibernate.mapping.BasicValue.resolution(BasicValue.java:647)
	at org.hibernate.mapping.BasicValue.buildResolution(BasicValue.java:498)
	at org.hibernate.mapping.BasicValue.resolve(BasicValue.java:350)
	at org.hibernate.mapping.BasicValue.resolve(BasicValue.java:340)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.lambda$processValueResolvers$4(InFlightMetadataCollectorImpl.java:1796)
	at java.base/java.util.ArrayList.removeIf(ArrayList.java:1682)
	at java.base/java.util.ArrayList.removeIf(ArrayList.java:1660)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processValueResolvers(InFlightMetadataCollectorImpl.java:1795)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1781)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:334)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
2024-11-20 01:29:19 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:29:19 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 24900 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:29:19 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:29:19 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:29:20 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:29:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:29:21 - Finished Spring Data repository scanning in 161 ms. Found 8 JPA repository interfaces.
2024-11-20 01:29:21 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:29:21 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:29:21 - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:29:21 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:29:21 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:29:21 - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-11-20 01:29:22 - Tomcat initialized with port 8080 (http)
2024-11-20 01:29:22 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:29:22 - Starting service [Tomcat]
2024-11-20 01:29:22 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:29:22 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:29:22 - Root WebApplicationContext: initialization completed in 2541 ms
2024-11-20 01:29:22 - HikariPool-1 - Starting...
2024-11-20 01:29:22 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57839834
2024-11-20 01:29:22 - HikariPool-1 - Start completed.
2024-11-20 01:29:22 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:29:22 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:29:23 - HHH000026: Second-level cache disabled
2024-11-20 01:29:23 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:29:23 - Failed to initialize JPA EntityManagerFactory: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
2024-11-20 01:29:23 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
2024-11-20 01:29:23 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:29:23 - HikariPool-1 - Shutdown completed.
2024-11-20 01:29:23 - Stopping service [Tomcat]
2024-11-20 01:29:23 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:29:23 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.hibernate.type.descriptor.java.spi.JdbcTypeRecommendationException: Could not determine recommended JdbcType for Java type 'com.poc.movieticketbookingplatform.model.Booking'
	at org.hibernate.type.descriptor.java.spi.UnknownBasicJavaType.getRecommendedJdbcType(UnknownBasicJavaType.java:50)
	at org.hibernate.boot.model.process.internal.InferredBasicValueResolver.from(InferredBasicValueResolver.java:195)
	at org.hibernate.mapping.BasicValue.resolution(BasicValue.java:647)
	at org.hibernate.mapping.BasicValue.buildResolution(BasicValue.java:498)
	at org.hibernate.mapping.BasicValue.resolve(BasicValue.java:350)
	at org.hibernate.mapping.BasicValue.resolve(BasicValue.java:340)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.lambda$processValueResolvers$4(InFlightMetadataCollectorImpl.java:1796)
	at java.base/java.util.ArrayList.removeIf(ArrayList.java:1682)
	at java.base/java.util.ArrayList.removeIf(ArrayList.java:1660)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processValueResolvers(InFlightMetadataCollectorImpl.java:1795)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1781)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:334)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 15 common frames omitted
2024-11-20 01:33:02 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:33:02 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 18824 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:33:02 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:33:02 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:33:03 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:33:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:33:04 - Finished Spring Data repository scanning in 157 ms. Found 8 JPA repository interfaces.
2024-11-20 01:33:04 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:33:04 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:33:04 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:33:04 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:33:04 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:33:04 - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-11-20 01:33:05 - Tomcat initialized with port 8080 (http)
2024-11-20 01:33:05 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:33:05 - Starting service [Tomcat]
2024-11-20 01:33:05 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:33:05 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:33:05 - Root WebApplicationContext: initialization completed in 2582 ms
2024-11-20 01:33:05 - HikariPool-1 - Starting...
2024-11-20 01:33:05 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3dd750ba
2024-11-20 01:33:05 - HikariPool-1 - Start completed.
2024-11-20 01:33:05 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:33:06 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:33:06 - HHH000026: Second-level cache disabled
2024-11-20 01:33:06 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:33:07 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 01:33:07 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:33:08 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
2024-11-20 01:33:08 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:33:08 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:33:08 - HikariPool-1 - Shutdown completed.
2024-11-20 01:33:08 - Stopping service [Tomcat]
2024-11-20 01:33:08 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:33:08 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByTheatreIdAndShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); No property 'theatreId' found for type 'Seat'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'theatreId' found for type 'Seat'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-20 01:41:41 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:41:41 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 29152 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:41:41 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:41:41 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:41:42 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:41:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:41:43 - Finished Spring Data repository scanning in 153 ms. Found 8 JPA repository interfaces.
2024-11-20 01:41:43 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:41:43 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:41:43 - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:41:43 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:41:43 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:41:43 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-20 01:41:44 - Tomcat initialized with port 8080 (http)
2024-11-20 01:41:44 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:41:44 - Starting service [Tomcat]
2024-11-20 01:41:44 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:41:44 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:41:44 - Root WebApplicationContext: initialization completed in 2520 ms
2024-11-20 01:41:44 - HikariPool-1 - Starting...
2024-11-20 01:41:44 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@395eb363
2024-11-20 01:41:44 - HikariPool-1 - Start completed.
2024-11-20 01:41:44 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:41:44 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:41:44 - HHH000026: Second-level cache disabled
2024-11-20 01:41:45 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:41:46 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 01:41:46 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:41:46 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
2024-11-20 01:41:46 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:41:46 - HikariPool-1 - Shutdown initiated...
2024-11-20 01:41:46 - HikariPool-1 - Shutdown completed.
2024-11-20 01:41:46 - Stopping service [Tomcat]
2024-11-20 01:41:46 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 01:41:46 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'seatRepository': Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seatRepository' defined in com.poc.movieticketbookingplatform.repository.SeatRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Reason: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.poc.movieticketbookingplatform.repository.SeatRepository.findByShowTheatreIdAndShowShowTimeAndSeatNumberAndIsBooked(java.lang.Long,java.lang.String,java.lang.String,boolean); Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.hibernate.query.SemanticException: Cannot compare left expression of type 'java.time.LocalTime' with right expression of type 'java.lang.String'
	at org.hibernate.query.sqm.internal.TypecheckUtil.assertComparable(TypecheckUtil.java:358)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:48)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:34)
	at org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder.equal(SqmCriteriaNodeBuilder.java:2143)
	at org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder.equal(SqmCriteriaNodeBuilder.java:190)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:312)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:210)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.and(JpaQueryCreator.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.and(JpaQueryCreator.java:1)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:122)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:224)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:370)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:103)
	... 60 common frames omitted
2024-11-20 01:43:34 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 01:43:34 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 31788 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 01:43:34 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 01:43:34 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 01:43:35 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:43:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 01:43:36 - Finished Spring Data repository scanning in 189 ms. Found 8 JPA repository interfaces.
2024-11-20 01:43:36 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:43:36 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 01:43:36 - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
2024-11-20 01:43:36 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 01:43:36 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 01:43:36 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 01:43:37 - Tomcat initialized with port 8080 (http)
2024-11-20 01:43:37 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 01:43:37 - Starting service [Tomcat]
2024-11-20 01:43:37 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 01:43:37 - Initializing Spring embedded WebApplicationContext
2024-11-20 01:43:37 - Root WebApplicationContext: initialization completed in 2756 ms
2024-11-20 01:43:37 - HikariPool-1 - Starting...
2024-11-20 01:43:37 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14b26e90
2024-11-20 01:43:37 - HikariPool-1 - Start completed.
2024-11-20 01:43:37 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 01:43:38 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 01:43:38 - HHH000026: Second-level cache disabled
2024-11-20 01:43:38 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 01:43:39 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 01:43:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 01:43:40 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-20 01:43:40 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-20 01:43:40 - Adding welcome page: class path resource [static/index.html]
2024-11-20 01:43:41 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@5bee88e3], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4dbf902, com.mongodb.Jep395RecordCodecProvider@3c0a4c8b, com.mongodb.KotlinCodecProvider@5f27d271]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3b48ffe8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-20 01:43:41 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24193700}
2024-11-20 01:43:42 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-20 01:43:43 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-20 01:43:43 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-20 01:43:43 - Kafka version: 3.7.1
2024-11-20 01:43:43 - Kafka commitId: e2494e6ffb89f828
2024-11-20 01:43:43 - Kafka startTimeMs: 1732047223960
2024-11-20 01:43:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:43 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:44 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:45 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:46 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:47 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:48 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:49 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:50 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:51 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:52 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:53 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:54 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:55 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:56 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:57 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:43:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:43:59 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:00 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:01 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-20 01:44:13 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-20 01:44:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-20 01:44:23 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-20 01:44:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-20 01:44:24 - Metrics scheduler closed
2024-11-20 01:44:24 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-20 01:44:24 - Metrics reporters closed
2024-11-20 01:44:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-20 01:44:24 - Tomcat started on port 8080 (http) with context path '/'
2024-11-20 01:44:24 - Started MovieticketbookingplatformApplication in 50.132 seconds (process running for 50.726)
2024-11-20 11:57:37 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 11:57:37 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 25868 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 11:57:37 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 11:57:37 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 11:57:39 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:57:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 11:57:39 - Finished Spring Data repository scanning in 180 ms. Found 8 JPA repository interfaces.
2024-11-20 11:57:39 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:57:39 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:57:39 - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
2024-11-20 11:57:39 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:57:39 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:57:39 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-20 11:57:40 - Tomcat initialized with port 8080 (http)
2024-11-20 11:57:40 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 11:57:40 - Starting service [Tomcat]
2024-11-20 11:57:40 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 11:57:40 - Initializing Spring embedded WebApplicationContext
2024-11-20 11:57:40 - Root WebApplicationContext: initialization completed in 2871 ms
2024-11-20 11:57:40 - HikariPool-1 - Starting...
2024-11-20 11:57:41 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b6136eb
2024-11-20 11:57:41 - HikariPool-1 - Start completed.
2024-11-20 11:57:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 11:57:41 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 11:57:41 - HHH000026: Second-level cache disabled
2024-11-20 11:57:42 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 11:57:43 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 11:57:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 11:57:43 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
2024-11-20 11:57:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 11:57:43 - HikariPool-1 - Shutdown initiated...
2024-11-20 11:57:43 - HikariPool-1 - Shutdown completed.
2024-11-20 11:57:43 - Stopping service [Tomcat]
2024-11-20 11:57:43 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 11:57:43 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndTownAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'town' found for type 'Theatre'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'town' found for type 'Theatre'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-20 11:58:51 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 11:58:52 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 24640 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 11:58:52 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 11:58:52 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 11:58:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:58:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 11:58:53 - Finished Spring Data repository scanning in 201 ms. Found 8 JPA repository interfaces.
2024-11-20 11:58:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:58:53 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 11:58:53 - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2024-11-20 11:58:53 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 11:58:53 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 11:58:54 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 11:58:55 - Tomcat initialized with port 8080 (http)
2024-11-20 11:58:55 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 11:58:55 - Starting service [Tomcat]
2024-11-20 11:58:55 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 11:58:55 - Initializing Spring embedded WebApplicationContext
2024-11-20 11:58:55 - Root WebApplicationContext: initialization completed in 3148 ms
2024-11-20 11:58:55 - HikariPool-1 - Starting...
2024-11-20 11:58:56 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14b26e90
2024-11-20 11:58:56 - HikariPool-1 - Start completed.
2024-11-20 11:58:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 11:58:56 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 11:58:56 - HHH000026: Second-level cache disabled
2024-11-20 11:58:56 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 11:58:57 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 11:58:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 11:58:58 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-20 11:58:59 - Found 2 UserDetailsService beans, with names [customUserDetailsService, userDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2024-11-20 11:58:59 - Adding welcome page: class path resource [static/index.html]
2024-11-20 11:59:00 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19.0.1+10-21"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@312eb], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f0952cf, com.mongodb.Jep395RecordCodecProvider@70fe15d, com.mongodb.KotlinCodecProvider@7efcdcde]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@780ccdc9], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-11-20 11:59:00 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39971900}
2024-11-20 11:59:01 - Exposing 1 endpoint beneath base path '/actuator'
2024-11-20 11:59:01 - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-11-20 11:59:02 - AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = movieticketbookingplatform-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-11-20 11:59:02 - Kafka version: 3.7.1
2024-11-20 11:59:02 - Kafka commitId: e2494e6ffb89f828
2024-11-20 11:59:02 - Kafka startTimeMs: 1732084142201
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:02 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:03 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:04 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:05 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:06 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:07 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:08 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:09 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:10 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:11 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:12 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:13 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:14 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:15 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:16 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:17 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:18 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:19 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:20 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:21 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:22 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:23 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:24 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:25 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:26 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:27 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:28 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:29 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:30 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:31 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2024-11-20 11:59:32 - Could not configure topics
org.springframework.kafka.KafkaException: Timed out waiting to get existing topics
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:550)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.springframework.kafka.core.KafkaAdmin.checkPartitions(KafkaAdmin.java:529)
	at org.springframework.kafka.core.KafkaAdmin.addOrModifyTopicsIfNeeded(KafkaAdmin.java:422)
	at org.springframework.kafka.core.KafkaAdmin.initialize(KafkaAdmin.java:274)
	at org.springframework.kafka.core.KafkaAdmin.afterSingletonsInstantiated(KafkaAdmin.java:238)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:986)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: java.util.concurrent.TimeoutException: null
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
	at org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:180)
	at org.springframework.kafka.core.KafkaAdmin.lambda$checkPartitions$13(KafkaAdmin.java:532)
	... 15 common frames omitted
2024-11-20 11:59:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:32 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:33 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:34 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:35 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:36 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:37 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:38 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:39 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:41 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Node -1 disconnected.
2024-11-20 11:59:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-11-20 11:59:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Forcing a hard I/O thread shutdown. Requests in progress will be aborted.
2024-11-20 11:59:42 - App info kafka.admin.client for movieticketbookingplatform-admin-0 unregistered
2024-11-20 11:59:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: The AdminClient thread has exited. Call: fetchMetadata
2024-11-20 11:59:42 - [AdminClient clientId=movieticketbookingplatform-admin-0] Timed out 2 remaining operation(s) during close.
2024-11-20 11:59:42 - Metrics scheduler closed
2024-11-20 11:59:42 - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-11-20 11:59:42 - Metrics reporters closed
2024-11-20 11:59:42 - Starting ProtocolHandler ["http-nio-8080"]
2024-11-20 11:59:42 - Tomcat started on port 8080 (http) with context path '/'
2024-11-20 11:59:42 - Started MovieticketbookingplatformApplication in 50.854 seconds (process running for 51.412)
2024-11-20 12:21:52 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-11-20 12:21:52 - Initializing Servlet 'dispatcherServlet'
2024-11-20 12:21:52 - Completed initialization in 119 ms
2024-11-20 12:25:50 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 12:25:50 - HikariPool-1 - Shutdown initiated...
2024-11-20 12:25:50 - HikariPool-1 - Shutdown completed.
2024-11-20 12:29:13 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 12:29:13 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 26144 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 12:29:13 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 12:29:13 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 12:29:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:29:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 12:29:15 - Finished Spring Data repository scanning in 188 ms. Found 8 JPA repository interfaces.
2024-11-20 12:29:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:29:15 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:29:15 - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2024-11-20 12:29:15 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:29:15 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:29:15 - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-11-20 12:29:16 - Tomcat initialized with port 8080 (http)
2024-11-20 12:29:16 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 12:29:16 - Starting service [Tomcat]
2024-11-20 12:29:16 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 12:29:16 - Initializing Spring embedded WebApplicationContext
2024-11-20 12:29:16 - Root WebApplicationContext: initialization completed in 2767 ms
2024-11-20 12:29:17 - HikariPool-1 - Starting...
2024-11-20 12:29:17 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33eab2e8
2024-11-20 12:29:17 - HikariPool-1 - Start completed.
2024-11-20 12:29:17 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 12:29:17 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 12:29:17 - HHH000026: Second-level cache disabled
2024-11-20 12:29:17 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 12:29:18 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 12:29:18 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 12:29:19 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
2024-11-20 12:29:19 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 12:29:19 - HikariPool-1 - Shutdown initiated...
2024-11-20 12:29:19 - HikariPool-1 - Shutdown completed.
2024-11-20 12:29:19 - Stopping service [Tomcat]
2024-11-20 12:29:19 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 12:29:19 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingController': Unsatisfied dependency expressed through field 'bookingService': Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookingService': Unsatisfied dependency expressed through field 'theatreRepository': Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'theatreRepository' defined in com.poc.movieticketbookingplatform.repository.TheatreRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.TheatreRepository.findByMovieIdAndCityAndDate(java.lang.Long,java.lang.String,java.time.LocalDate); No property 'movieId' found for type 'Theatre'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'movieId' found for type 'Theatre'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
2024-11-20 12:43:43 - HV000001: Hibernate Validator 8.0.1.Final
2024-11-20 12:43:43 - Starting MovieticketbookingplatformApplication using Java 19.0.1 with PID 24832 (E:\movieticketbookingplatform\movieticketbookingplatform\target\classes started by DELL in E:\movieticketbookingplatform\movieticketbookingplatform)
2024-11-20 12:43:43 - Running with Spring Boot v3.3.5, Spring v6.1.14
2024-11-20 12:43:43 - No active profile set, falling back to 1 default profile: "default"
2024-11-20 12:43:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:43:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-20 12:43:46 - Finished Spring Data repository scanning in 188 ms. Found 8 JPA repository interfaces.
2024-11-20 12:43:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:43:46 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-11-20 12:43:46 - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
2024-11-20 12:43:46 - Multiple Spring Data modules found, entering strict repository configuration mode
2024-11-20 12:43:46 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.MovieRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.RequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.SeatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.ShowRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.TheatreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.poc.movieticketbookingplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-11-20 12:43:46 - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-11-20 12:43:47 - Tomcat initialized with port 8080 (http)
2024-11-20 12:43:47 - Initializing ProtocolHandler ["http-nio-8080"]
2024-11-20 12:43:47 - Starting service [Tomcat]
2024-11-20 12:43:47 - Starting Servlet engine: [Apache Tomcat/10.1.31]
2024-11-20 12:43:47 - Initializing Spring embedded WebApplicationContext
2024-11-20 12:43:47 - Root WebApplicationContext: initialization completed in 4265 ms
2024-11-20 12:43:48 - HikariPool-1 - Starting...
2024-11-20 12:43:48 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5eee3da9
2024-11-20 12:43:48 - HikariPool-1 - Start completed.
2024-11-20 12:43:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-20 12:43:48 - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-20 12:43:48 - HHH000026: Second-level cache disabled
2024-11-20 12:43:49 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-20 12:43:51 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-11-20 12:43:51 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 12:43:51 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
2024-11-20 12:43:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-11-20 12:43:51 - HikariPool-1 - Shutdown initiated...
2024-11-20 12:43:51 - HikariPool-1 - Shutdown completed.
2024-11-20 12:43:51 - Stopping service [Tomcat]
2024-11-20 12:43:51 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-20 12:43:51 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showController': Unsatisfied dependency expressed through field 'showService': Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.poc.movieticketbookingplatform.MovieticketbookingplatformApplication.main(MovieticketbookingplatformApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'showService': Unsatisfied dependency expressed through field 'showRepository': Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'showRepository' defined in com.poc.movieticketbookingplatform.repository.ShowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); Reason: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:119)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.poc.movieticketbookingplatform.repository.ShowRepository.findByMovieIdAndDate(java.lang.Long,java.time.LocalDate); No property 'date' found for type 'Show'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'date' found for type 'Show'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:455)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:431)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:384)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:366)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:344)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:101)
	... 60 common frames omitted
